// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectCharacterManager.Infra.Data.Context;

#nullable disable

namespace ProjectCharacterManager.Infra.Data.Migrations
{
    [DbContext(typeof(SQLServerContext))]
    partial class SQLServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectCharacterManager.Domain.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorldId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ProjectCharacterManager.Domain.Entities.World", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Worlds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The world where only OBCM exists",
                            Name = "OBCM World"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A dreamscape where Pink exists, outside all realities",
                            Name = "Pink's dimension"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The world where no involuntary suffering exists",
                            Name = "Perfeita Realidade"
                        });
                });

            modelBuilder.Entity("ProjectCharacterManager.Domain.Entities.Character", b =>
                {
                    b.HasOne("ProjectCharacterManager.Domain.Entities.World", "World")
                        .WithMany("CharactersList")
                        .HasForeignKey("WorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("World");
                });

            modelBuilder.Entity("ProjectCharacterManager.Domain.Entities.World", b =>
                {
                    b.Navigation("CharactersList");
                });
#pragma warning restore 612, 618
        }
    }
}
